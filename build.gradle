plugins {
  id 'org.jenkins-ci.jpi' version '0.39.0'
}

apply plugin: 'eclipse'
apply plugin: 'checkstyle'

ext {
	instantMessagingPluginVersion = "1.37"
	workflowStepApiPluginVersion = "2.9"
	matrixPluginVersion = "1.4"
	smackVersion = "4.4.1"
}

group 'org.jvnet.hudson.plugins'
version readVersionFile()

repositories {
	mavenLocal()
	mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility

java {
	registerFeature('matrix') {
		usingSourceSet(sourceSets.main)
	}
}

dependencies {
	implementation "org.jvnet.hudson.plugins:instant-messaging:${instantMessagingPluginVersion}@jar"
	implementation "org.jenkins-ci.plugins.workflow:workflow-step-api:${workflowStepApiPluginVersion}@jar"
	implementation "org.jenkins-ci.plugins:mailer:1.7@jar"
	//can't seem to compile without this (an older version gets picked up otherwise)
	matrixImplementation "org.jenkins-ci.plugins:matrix-project:${matrixPluginVersion}@jar"

	implementation "org.igniterealtime.smack:smack-java8:$smackVersion"
	implementation "org.igniterealtime.smack:smack-extensions:$smackVersion"
	implementation "org.igniterealtime.smack:smack-tcp:$smackVersion"

	testImplementation group: 'junit', name: 'junit', version: '4.11'
}

jenkinsPlugin {
	coreVersion = "2.164"
	displayName = "Jenkins Jabber (XMPP) notifier and control plugin"
	url = "http://wiki.jenkins-ci.org/display/JENKINS/Jabber+Plugin"
	gitHubUrl = "https://github.com/jenkinsci/jabber-plugin"
	shortName = "jabber"

	developers {
		developer {
			id "flow"
			name "Florian Schmaus"
			email "flo@geekplace.eu"
		}
		developer {
			id "kutzi"
			name "Christoph Kutzinski"
			email "kutzi@gmx.de"
		}
	}

	licenses {
		license {
			name 'MIT'
			url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
			distribution 'repo'
		}
	}
}

checkstyle {
	toolVersion = '8.10'
}

def readVersionFile() {
	def versionFile = new File(rootDir, 'version')
	if (!versionFile.isFile()) {
		throw new Exception("Could not find version file")
	}
	if (versionFile.text.isEmpty()) {
		throw new Exception("Version file does not contain a version")
	}
	versionFile.text.trim()
}
